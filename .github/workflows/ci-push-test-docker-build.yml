name: Push CI Build Test For Docker Image

on:
  push:
    branches-ignore:
      - master

jobs:
  pushCiBuildDockerImage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build Terraform Docker Image
        id: build_terraform_docker_image
        run: |
          make \
            STEP_1_IMAGE="golang:1.14.1-alpine3.11" \
            STEP_2_IMAGE="alpine:3.11" \
            TERRAFORM_VERSION=0.12.20 \
            docker-build
      - name: Get Build Informaiton
        if: always()
        id: build_info
        run: |
          branch_name=${GITHUB_REF##*/}
          echo '{"github_repository":"'${GITHUB_REPOSITORY}'","branch_name":"'${branch_name}'"}' >> build_info.json 2>&1
      - name: Persisting Variables
        id: persisting_log
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: build_info
          path: build_info.json
  logPushCiBuildDockerImage:
    needs: pushCiBuildDockerImage
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Get Build Job Info From FIle
        uses: actions/download-artifact@v1
        with:
          name: build_info
      - name: Set Variables With Build Info
        id: job_info
        run: |
          curl -v -L -u runner:${{ secrets.GITHUB_TOKEN }} -o job_info.json https://api.github.com/repos/$(cat build_info/build_info.json | jq --raw-output '.github_repository')/actions/runs/${{ github.run_id }}/jobs
          echo ::set-output name=log_url::$(cat job_info.json | jq --raw-output '.jobs | .[0] | .url')
          echo ::set-output name=html_url::$(cat job_info.json | jq --raw-output '.jobs | .[0] | .html_url')
          echo ::set-output name=branch_name::$(cat build_info/build_info.json | jq --raw-output '.branch_name')
      - name: Generate log file
        run: curl -v -L -u runner:${{ secrets.GITHUB_TOKEN }} -o build_logs.txt ${{ steps.job_info.outputs.log_url }}/logs
      - name: Slack Notification
        id: slack_notification
        uses: bryan-nice/slack-notification@1.0.0
        if: contains(steps.job_info.outputs.status, 'failure')
        env:
          SLACK_CHANNEL: ci-cd-dev
          SLACK_COLOR: '#3278BD'
          SLACK_TITLE: 'FAULRE: docker-terraform-azure docker image build failed on commit sha ${{ github.sha }}'
          SLACK_MESSAGE: |
            OS: alpine:3.11
            Branch Name: ${{ steps.job_info.outputs.branch_name }}
            The commit SHA is: ${{ github.sha }}
            Git Actions Log URL: ${{ steps.job_info.outputs.html_url }}
          SLACK_USERNAME: docker-terraform-azure
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_ACTION: ${{ github.action }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_WORKFLOW: ${{ github.workflow }}
      - name: Persisting log
        id: persisting_log
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: workflow_log
          path: build_logs.txt
